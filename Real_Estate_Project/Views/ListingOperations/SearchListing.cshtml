@model Real_Estate_Project.ViewModels.SearchListingViewModel
@using PagedList.Mvc;
@{
    ViewBag.Title = "SearchListing";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1 style="text-align:center;">Search Listing</h1>
<br />

<div class="row">
    <div class="col-4">
        <div class="card text-white bg-dark mb-3">
            <div class="card-body">
                @using (Html.BeginForm())
                {
                    @Html.HiddenFor(model => model.ViewingID)

                    <div class="row">
                        <div class="col-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SearchModel.Municipality)
                                @Html.TextBoxFor(model => model.SearchModel.Municipality)
                            </div>
                        </div>
                        <div class="col-5">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SearchModel.PriceRange)
                                @Html.DropDownListFor(model => model.SearchModel.PriceRangeString,
                                new SelectList(Model.PriceRangeList, "Key", "Key"),
                                "Select a City area",
                                new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SearchModel.NumOfBeds)
                                @Html.EditorFor(model => model.SearchModel.NumOfBeds)
                                @Html.ValidationMessageFor(model => model.SearchModel.NumOfBeds, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.SearchModel.NumOfBaths)
                                @Html.EditorFor(model => model.SearchModel.NumOfBaths)
                                @Html.ValidationMessageFor(model => model.SearchModel.NumOfBaths, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SearchModel.NumOfStories)
                        @Html.EditorFor(model => model.SearchModel.NumOfStories)
                        @Html.ValidationMessageFor(model => model.SearchModel.NumOfStories, "", new { @class = "text-danger" })
                    </div>
                    <div class="row">
                        <div class="col-3">
                            <div class="form-group">
                                <button type="submit" value="Search" class="btn btn-outline-success">
                                    <i class="fas fa-search"></i>
                                </button>
                            </div>
                        </div>
                        <div class="col-6"></div>
                        <div class="col-3">
                            <span style="font-size: 2em;">
                                <a href="@Url.Action("SearchListing","ListingOperations")">
                                    <i class="fas fa-backspace"></i>
                                </a>
                            </span>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <div class="col-8">
        <div class="card text-white bg-dark mb-3">
            <div class="card-body">
                <table class="table table-dark">
                    <tr>
                        <th>
                            @Html.ActionLink(Html.DisplayNameFor(model => model.DisplayOnlyModel.ListingAddress.PostalCode).ToString()
                              , "SearchListing", new { orderBy = Model.PostalCodeParam, ViewingID = Model.ViewingID }, new { @class = "text-info" })
                        </th>
                        <th>
                            @Html.ActionLink(Html.DisplayNameFor(model => model.DisplayOnlyModel.Price).ToString()
                                 , "SearchListing", new { orderBy = Model.PriceParam, ViewingID = Model.ViewingID })

                        </th>
                        <th>
                            @Html.ActionLink(Html.DisplayNameFor(model => model.DisplayOnlyModel.SquareFootage).ToString()
                            , "SearchListing", new { orderBy = Model.SquareFootageParam, ViewingID = Model.ViewingID })
                        </th>
                        <th>
                            @Html.ActionLink(Html.DisplayNameFor(model => model.DisplayOnlyModel.NumOfBeds).ToString()
                            , "SearchListing", new { orderBy = Model.NumOfBedsParam, ViewingID = Model.ViewingID })
                        </th>
                        <th>
                            @Html.ActionLink(Html.DisplayNameFor(model => model.DisplayOnlyModel.NumOfBaths).ToString()
                            , "SearchListing", new { orderBy = Model.NumOfBathsParam, ViewingID = Model.ViewingID })
                        </th>
                        <th>
                            @Html.ActionLink(Html.DisplayNameFor(model => model.DisplayOnlyModel.NumOfStories).ToString()
                            , "SearchListing", new { orderBy = Model.NumOfStoriesParam, ViewingID = Model.ViewingID })
                        </th>
                        <th></th>
                        <th></th>
                    </tr>

                    @foreach (var item in Model.Listings)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.ListingAddress.PostalCode)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Price)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SquareFootage)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.NumOfBeds)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.NumOfBaths)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.NumOfStories)
                            </td>
                            <td>
                                @*this anchor i added i wanted the user to be able to click details and instantly get directed
                                    within the same page to the details section that come up on the bottom of the page.
                                    It didn't work :/*@
                                <a href="#details">
                                    @Html.ActionLink("Details", "SearchListing", "ListingOperations",
                                        new
                                             {
                                            orderBy = Model.CurrentSort,
                                            ViewingID = Model.ViewingID,
                                            page = Model.Listings.PageNumber,
                                            municipality = Model.SearchModel.Municipality,
                                            numOfBeds = Model.SearchModel.NumOfBeds,
                                            numOfBaths = Model.SearchModel.NumOfBaths,
                                            numOfStories = Model.SearchModel.NumOfStories,
                                            priceRangeString = Model.SearchModel.PriceRangeString,
                                            listingRequestedDetails = item.ID
                                        }, null)
                                </a>
                            </td>
                            <td>
                                @if (Model.ViewingID.HasValue)
                                {
                                    @Html.ActionLink("Request Viewing", "Edit", "Viewings", new
                                    {
                                        listingId = item.ID,
                                    id = Model.ViewingID
                                    }, null)
                                }
                                else
                                {
                                    @Html.ActionLink("Request Viewing", "Create", "Viewings", new { listingId = item.ID }, null)
                                }
                            </td>
                        </tr>
                    }
                </table>
                <hr />
                Page @(Model.Listings.PageCount < Model.Listings.PageNumber ? 0 : Model.Listings.PageNumber) of @Model.Listings.PageCount
                @Html.PagedListPager(Model.Listings, page => Url.Action("SearchListing", new
           {
               page = page,
               orderBy = Model.CurrentSort,
               ViewingID = Model.ViewingID,
               municipality = Model.SearchModel.Municipality,
               numOfBeds = Model.SearchModel.NumOfBeds,
               numOfBaths = Model.SearchModel.NumOfBaths,
               numOfStories = Model.SearchModel.NumOfStories,
               priceRangeString = Model.SearchModel.PriceRangeString
           }))
            </div>
        </div>
    </div>
</div>
@if (Model.DisplayOnlyModel.ID > 0)
{
    @*id details has been added to this div to try to connect the anchor to it*@
    <div class="row" id="details">
        <div class="col-12">
            <div class="card text-white bg-dark mb-3">
                <div class="card-body">
                    <div class="row">
                        <div class="col-4">
                            <div id="carouselExampleFade" class="carousel slide carousel-fade" data-ride="carousel">
                                @if (Model.DisplayOnlyModel.ImagesContent.Count > 0)
                                {
                                    <div class="carousel-inner">
                                        @for (int i = 0; i < Model.DisplayOnlyModel.ImagesContent.Count; i++)
                                        {
                                            if (i == 0)
                                            {
                                                <div class="carousel-item active">
                                                    <img src="@Url.Action("DisplayFullImage", new { id = Model.DisplayOnlyModel.ImagesContent.ToArray()[i].ID })"
                                                         alt="Listing Image" class="d-block w-100" />
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="carousel-item">
                                                    <img src="@Url.Action("DisplayFullImage", new { id = Model.DisplayOnlyModel.ImagesContent.ToArray()[i].ID })"
                                                         alt="Listing Image" class="d-block w-100" />
                                                </div>
                                            }
                                        }

                                    </div>
                                }
                                <a class="carousel-control-prev" href="#carouselExampleFade" role="button" data-slide="prev">
                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Previous</span>
                                </a>
                                <a class="carousel-control-next" href="#carouselExampleFade" role="button" data-slide="next">
                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Next</span>
                                </a>
                            </div>
                        </div>
                        <div class="col-8">

                            <div class="row">
                                <div class="col-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DisplayOnlyModel.Customer, new { @class = "text-primary" })
                                        @Html.DisplayFor(model => model.DisplayOnlyModel.Customer.FullName)
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DisplayOnlyModel.Price, new { @class = "text-primary" })
                                        @Html.DisplayFor(model => model.DisplayOnlyModel.Price)
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DisplayOnlyModel.AssociatedAgent, new { @class = "text-primary" })
                                        @Html.DisplayFor(model => model.DisplayOnlyModel.AssociatedAgent.FullName)
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DisplayOnlyModel.ListingAddress.StreetAddress,
                                       new { @class = "text-primary" })
                                        @Html.DisplayFor(model => model.DisplayOnlyModel.ListingAddress.StreetAddress)
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DisplayOnlyModel.ListingAddress.Municipality, new { @class = "text-primary" })
                                        @Html.DisplayFor(model => model.DisplayOnlyModel.ListingAddress.Municipality)
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DisplayOnlyModel.ListingAddress.Province, new { @class = "text-primary" })
                                        @Html.DisplayFor(model => model.DisplayOnlyModel.ListingAddress.Province)
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DisplayOnlyModel.ListingAddress.PostalCode, new { @class = "text-primary" })
                                        @Html.DisplayFor(model => model.DisplayOnlyModel.ListingAddress.PostalCode)
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DisplayOnlyModel.ListingAddress.AddressDetails, new { @class = "text-primary" })
                                        @Html.DisplayFor(model => model.DisplayOnlyModel.ListingAddress.AddressDetails)
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-6">
                                    <ul class="list-group">
                                        @Html.LabelFor(model => model.DisplayOnlyModel.Heating, new { @class = "list-group-item active" })
                                        @foreach (var item in Model.DisplayOnlyModel.Heating)
                                        {
                                            <li class="list-group-item text-dark">@item.HeatingType</li>
                                        }
                                    </ul>
                                </div>
                                <div class="col-6">
                                    <ul class="list-group">
                                        @Html.LabelFor(model => model.DisplayOnlyModel.Features, new { @class = "list-group-item active" })

                                        @foreach (var item in Model.DisplayOnlyModel.Features)
                                        {
                                            <li class="list-group-item text-dark">@item.FeatureName</li>
                                        }
                                    </ul>
                                </div>
                            </div>
                            <br />
                            @if (Model.ViewingID.HasValue)
                            {
                                @Html.ActionLink("Request Viewing", "Edit", "Viewings", new
                           {
                               listingId = Model.DisplayOnlyModel.ID,
                               ViewingId = Model.ViewingID
                           }, null)
                            }
                            else
                            {
                                @Html.ActionLink("Request Viewing", "Create", "Viewings",
                               new { listingId = Model.DisplayOnlyModel.ID }, null)
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }